@model GuildUsersQueryModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "StarCraft Page";

}
<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            background-image: url("/Img/sc/SC1.jpg");
            background-repeat: no-repeat;
            background-attachment: fixed;
            background-size: 100% 100%;
        }

        img {
            border-radius: 50%;
        }

        .box {
            width: 235px;
            height: 115px;
            overflow: scroll;
        }

        .outBox {
            margin: 30px;
            /*border: 1px solid #ccc;*/
            /*float: left;*/
            width: 180px;
        }
    </style>
</head>

<body>
    <header>
    </header>

    <div class="position-relative relative">
        <nav class="navbar bg-body-tertiary position-absolute top-0 end-50">
            <div class="container-fluid">
                <form class="d-flex" role="search">
                    <input asp-for="SearchString" class="form-control me-2" type="search" placeholder="Search by Guild Name" aria-label="Search">
                    <button class="btn btn-info" type="submit">Search</button>
                </form>
            </div>
        </nav>

        @{
            int previousPage = Model.CurrentPage - 1;
            if (previousPage < 1)
            {
                previousPage = 1;
            }

            int maxPage = (int)Math.Ceiling((double)Model.GuildUsersCount /
            Model.UserPerPage);
        }

        <div class="row mb-5">
            <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
                <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
                   asp-controller="Pages"
                   asp-action="StarCraft"
                   asp-route-currentPage="@previousPage"
                   asp-route-searchTerm="@Model.SearchString"><<</a>
            </div>

            @{
                bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
                !Model.GuildUsers.Any();
            }

            <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
                <a class="btn btn-primary
           @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
                   asp-controller="Pages"
                   asp-action="StarCraft"
                   asp-route-currentPage="@(Model.CurrentPage + 1)"
                   asp-route-searchTerm="@Model.SearchString">>></a>

            </div>
        </div>
    </div>

    <div class="position-relative">
        @{
            var counter = 0;
            var userName = "";
        }
        @if (Model.GuildUsersCount <= 1)
        {
            <h4 class="position-relative" style="color:aqua" disabled>"@Model.GuildUsersCount GameUser Are Found"</h4>

        }
        else
        {
            <h4 class="position-relative" style="color:aqua" disabled>"@Model.GuildUsersCount GameUsers Are Found"</h4>
        }
        @foreach (var user in Model.GuildUsers)
        {
            @if (SignInManager.IsSignedIn(User))
            {
                if (user.UserName == User.Identity!.Name)
                {
                    userName = user.UserName;
                    continue;
                }
            }
            counter++;
            <div class="outBox">
                <partial name="_StarCraftGuildUsersPartial" model="@user" />
            </div>          
        } 
        <div class="text-center  position-absolute top-0 end-0">
            @if (SignInManager.IsSignedIn(User) && User.Identity?.Name == "KirilToshev")
            {
                <a class="btn btn-outline-info btn-sm" asp-area="" asp-controller="Banner" asp-action="StarCraftBanners" asp-route-id="">See All Banners</a>
            }
            @foreach (var banner in Model.Banners)
            {
                @if (counter == 0)
                {
                    <div class="outBox">
                        <partial name="_BannerPartial" model="@banner" />
                    </div>
                    break;
                }
                @if (userName == User.Identity!.Name)
                {
                    userName = "";
                    continue;
                }
                <div class="outBox">
                    <partial name="_BannerPartial" model="@banner" />
                </div>
            } 
        </div>
    </div>
</body>
</html>








